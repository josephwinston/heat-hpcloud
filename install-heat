#!/bin/bash

set -e

PUBLIC_IP=127.0.0.1
DATABASE_PASSWORD=`cat /proc/sys/kernel/random/uuid`
RABBITMQ_PASSWORD=`cat /proc/sys/kernel/random/uuid`
REGION="az-1.region-a.geo-1"
AUTH_URL="https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/"

if [ -e "/root/localrc" ]
then
    echo " * Loading local configuration from 'localrc'..."
    source /root/localrc
else
    echo " * No localrc is detected... "
    echo DATABASE_PASSWORD=$DATABASE_PASSWORD >> /root/localrc
    echo RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD >> /root/localrc
fi

echo " * Region will be set to '${REGION}'..."
echo " * Auth URL will be set to '${AUTH_URL}'..."

sleep 3

echo
echo "=== Installing Heat ==="
echo

echo " * Preseeding mysql server configuration..."
cat << MYSQL_PRESEED | debconf-set-selections
mysql-server mysql-server/root_password password ${DATABASE_PASSWORD}
mysql-server mysql-server/root_password_again password ${DATABASE_PASSWORD}
mysql-server mysql-server/start_on_boot boolean true
MYSQL_PRESEED

echo " * Downloading heat..."
cd heat
echo " * Installing additional python dependencies..."
#XXX: Work around 'TypeError: dist must be a Distribution instance'.
# pip install requests==1.2.2
pip install -r requirements.txt
# XXX: test packages needed due to bug in plugin loading in heat
pip install --quiet -r test-requirements.txt
echo " * Installing heat package in 'developer mode'..."
python setup.py develop --quiet
pip install --quiet python-heatclient
pip install heat-cfntools

echo " * Patching heat to run against HP Cloud..."
git apply << EOF
diff --git a/contrib/heat_keystoneclient_v2/heat_keystoneclient_v2/client.py b/contrib/heat_keystoneclient_v2/heat_keystoneclient_v2/client.py
index 28de5d9..8382f14 100644
--- a/contrib/heat_keystoneclient_v2/heat_keystoneclient_v2/client.py
+++ b/contrib/heat_keystoneclient_v2/heat_keystoneclient_v2/client.py
@@ -195,6 +195,8 @@ class KeystoneClientV2(object):
         self.client.users.update_enabled(user_id, True)
 
     def url_for(self, **kwargs):
+        default_region_name = cfg.CONF.region_name_for_services
+        kwargs.setdefault('region_name', default_region_name)
         return self.client.service_catalog.url_for(**kwargs)
 
     @property
EOF

echo " * Installing heat configuration files into '/etc/heat/'..."
cp -r etc/heat /etc/
chown -R `whoami` /etc/heat

echo " * Updating heat configuration files..."
cat > /etc/heat/heat.conf << EOF
[DEFAULT]
rabbit_password = ${RABBITMQ_PASSWORD}
auth_encryption_key = $(hexdump -n 16 -v -e '/1 "%02x"' /dev/random)
heat_metadata_server_url = http://${PUBLIC_IP}:8000
heat_waitcondition_server_url = http://${PUBLIC_IP}:8000/v1/waitcondition
heat_watch_server_url = http://${PUBLIC_IP}:8003
region_name_for_services = ${REGION}
sql_connection = mysql://heat:heat@localhost/heat
debug = True
log_dir = /var/log/heat/
plugin_dirs = /home/ubuntu/heat-hpcloud/heat/contrib/heat_keystoneclient_v2
keystone_backend = heat.engine.plugins.heat_keystoneclient_v2.client.KeystoneClientV2

[keystone_authtoken]
auth_uri = ${AUTH_URL}

[paste_deploy]
flavor = standalone
EOF

echo " * Creating log directory at '/var/log/heat/'..."
mkdir -p /var/log/heat/
chown -R `whoami` /var/log/heat
